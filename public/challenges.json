[
  {
    "id": "sum-array",
    "title": "Sum the Numbers",
    "prompt": "Return the sum of all numbers in the array.",
    "signature": {
      "python": "def solve(nums):",
      "javascript": "function solve(nums) {"
    },
    "starter": {
      "python": "def solve(nums):\n    # TODO: Add up all the numbers\n    return 0",
      "javascript": "function solve(nums) {\n  // TODO: Add up all the numbers\n  return 0;\n}"
    },
    "tests": [
      { "input": [[1, 2, 3]], "output": 6 },
      { "input": [[]], "output": 0 },
      { "input": [[5]], "output": 5 },
      { "input": [[-1, 1, -2, 2]], "output": 0 },
      { "input": [[10, 20, 30]], "output": 60 }
    ],
    "kids_pseudocode": [
      "Start with total = 0",
      "For each number in the list, add it to total",
      "Return total"
    ],
    "visual": {
      "type": "array",
      "initial": [1, 2, 3]
    },
    "explain": "Use a loop and accumulator; O(n)."
  },
  {
    "id": "reverse-string",
    "title": "Reverse a String",
    "prompt": "Return the string reversed.",
    "signature": {
      "python": "def solve(s):",
      "javascript": "function solve(s) {"
    },
    "starter": {
      "python": "def solve(s):\n    # TODO: Reverse the string\n    return \"\"",
      "javascript": "function solve(s) {\n  // TODO: Reverse the string\n  return \"\";\n}"
    },
    "tests": [
      { "input": ["hello"], "output": "olleh" },
      { "input": [""], "output": "" },
      { "input": ["a"], "output": "a" },
      { "input": ["abc"], "output": "cba" },
      { "input": ["12345"], "output": "54321" }
    ],
    "kids_pseudocode": [
      "Start with an empty result",
      "Go through each character from the end to the beginning",
      "Add each character to the result",
      "Return the result"
    ],
    "visual": {
      "type": "string",
      "initial": "hello"
    },
    "explain": "Iterate backwards or use built-in reverse; O(n)."
  },
  {
    "id": "find-max",
    "title": "Find Maximum",
    "prompt": "Return the largest number in the array.",
    "signature": {
      "python": "def solve(nums):",
      "javascript": "function solve(nums) {"
    },
    "starter": {
      "python": "def solve(nums):\n    # TODO: Find the biggest number\n    return 0",
      "javascript": "function solve(nums) {\n  // TODO: Find the biggest number\n  return 0;\n}"
    },
    "tests": [
      { "input": [[1, 3, 2]], "output": 3 },
      { "input": [[5]], "output": 5 },
      { "input": [[-1, -5, -2]], "output": -1 },
      { "input": [[10, 20, 5, 30]], "output": 30 }
    ],
    "kids_pseudocode": [
      "Start with the first number as the biggest",
      "Look at each other number",
      "If a number is bigger, remember it as the new biggest",
      "Return the biggest number"
    ],
    "visual": {
      "type": "array",
      "initial": [1, 3, 2]
    },
    "explain": "Track maximum while iterating; O(n)."
  },
  {
    "id": "count-vowels",
    "title": "Count Vowels",
    "prompt": "Count how many vowels (a, e, i, o, u) are in the string.",
    "signature": {
      "python": "def solve(s):",
      "javascript": "function solve(s) {"
    },
    "starter": {
      "python": "def solve(s):\n    # TODO: Count vowels\n    return 0",
      "javascript": "function solve(s) {\n  // TODO: Count vowels\n  return 0;\n}"
    },
    "tests": [
      { "input": ["hello"], "output": 2 },
      { "input": [""], "output": 0 },
      { "input": ["aeiou"], "output": 5 },
      { "input": ["xyz"], "output": 0 },
      { "input": ["Programming"], "output": 3 }
    ],
    "kids_pseudocode": [
      "Start with count = 0",
      "Look at each letter in the word",
      "If the letter is a vowel (a, e, i, o, u), add 1 to count",
      "Return the count"
    ],
    "visual": {
      "type": "string",
      "initial": "hello"
    },
    "explain": "Check each character against vowel set; O(n)."
  },
  {
    "id": "balanced-brackets",
    "title": "Balanced Brackets",
    "prompt": "Check if the brackets in the string are balanced.",
    "signature": {
      "python": "def solve(s):",
      "javascript": "function solve(s) {"
    },
    "starter": {
      "python": "def solve(s):\n    # TODO: Check if brackets are balanced\n    return False",
      "javascript": "function solve(s) {\n  // TODO: Check if brackets are balanced\n  return false;\n}"
    },
    "tests": [
      { "input": ["()"], "output": true },
      { "input": [""], "output": true },
      { "input": ["(())"], "output": true },
      { "input": ["(()"], "output": false },
      { "input": ["())"], "output": false },
      { "input": ["((()))"], "output": true }
    ],
    "kids_pseudocode": [
      "Start with count = 0",
      "For each character, if it's '(' add 1 to count",
      "If it's ')' subtract 1 from count",
      "If count goes below 0, return false",
      "At the end, return true if count is 0"
    ],
    "explain": "Use counter or stack to track open brackets; O(n)."
  }
]